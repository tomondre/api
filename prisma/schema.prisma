generator client {
  provider = "prisma-client-js"
}

model Deployment {
  id          Int      @id @default(autoincrement())
  name        String
  description String
  deployedOn  DateTime
  repoUrl     String @default("")
  url         String
  healthUrl   String
}

model WorkExperience {
  id               Int              @id @default(autoincrement())
  company          String
  position         String
  employmentType   String
  isCurrent        Boolean
  startDate        DateTime
  endDate          DateTime
  location         Location         @relation(fields: [locationId], references: [id])
  locationId       Int
  responsibilities Responsibility[]
  links            Link[]
}

model Responsibility {
  id               Int            @id @default(autoincrement())
  responsibility   String
  workExperience   WorkExperience @relation(fields: [workExperienceId], references: [id])
  workExperienceId Int
}

model Location {
  id             Int              @id @default(autoincrement())
  city           String
  country        String
  workExperience WorkExperience[]
  Education      Education[]
  Project        Project[]

  @@unique(fields: [city, country])
}

model Link {
  id               Int             @id @default(autoincrement())
  description      String
  url              String
  workExperience   WorkExperience? @relation(fields: [workExperienceId], references: [id])
  workExperienceId Int?
  education        Education?      @relation(fields: [educationId], references: [id])
  educationId      Int?
  project          Project?        @relation(fields: [projectId], references: [id])
  projectId        Int?
}

model Education {
  id           Int        @id @default(autoincrement())
  school       String
  degree       String
  fieldOfStudy String
  isCurrent    Boolean
  startDate    DateTime
  endDate      DateTime
  location     Location   @relation(fields: [locationId], references: [id])
  locationId   Int
  activities   Activity[]
  links        Link[]
}

model Activity {
  id          Int       @id @default(autoincrement())
  activity    String
  education   Education @relation(fields: [educationId], references: [id])
  educationId Int
}

model Project {
  id           Int           @id @default(autoincrement())
  name         String
  description  String        @db.VarChar(1500)
  status       String
  category     String
  startDate    DateTime
  endDate      DateTime
  location     Location      @relation(fields: [locationId], references: [id])
  locationId   Int
  client       String
  technologies Technology[]
  links        ProjectLink[]
  Link         Link[]
}

model ProjectLink {
  id          Int     @id @default(autoincrement())
  url         String
  description String
  type        String
  project     Project @relation(fields: [projectId], references: [id])
  projectId   Int
}

model Technology {
  id         Int     @id @default(autoincrement())
  technology String
  project    Project @relation(fields: [projectId], references: [id])
  projectId  Int
}

model Certificate {
  id           Int      @id @default(autoincrement())
  name         String
  organization String
  description  String @db.LongText
  issuedDate   DateTime
  expiryDate   DateTime
  credentialId String
  url          String
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}
